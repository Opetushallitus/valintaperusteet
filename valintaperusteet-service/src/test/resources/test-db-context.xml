<?xml version="1.0" encoding="windows-1252"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <context:annotation-config />

    <bean id="genericDAO" class="fi.vm.sade.service.valintaperusteet.dao.impl.GenericDAOImpl" />
    <context:component-scan base-package="fi.vm.sade.service.valintaperusteet.dao.impl" />

    <!-- Add EntityManagerFactory (required by jta) support -->
    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
        </property>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.show_sql" value="false" />
                <entry key="hibernate.jdbc.lob.non_contextual_creation" value="true" />
            </map>
        </property>
        <property name="persistenceXmlLocation" value="classpath:META-INF/test-persistence.xml" />
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- transaction manager -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf" />
    </bean>
    <!-- enable spring annotation driven transactions -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Spring bean configuration. Tell Spring to bounce off BoneCP -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource" ref="mainDataSource">
        </property>
    </bean>

    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="poolName" value="springHikariCP" />
        <property name="connectionTestQuery" value="SELECT 1" />
        <property name="dataSourceClassName" value="org.postgresql.ds.PGSimpleDataSource" />
        <property name="maximumPoolSize" value="10" />
        <property name="connectionTimeout" value="3000" />
        <property name="maxLifetime" value="3000"/>
        <property name="leakDetectionThreshold" value="3000" />
        <property name="registerMbeans" value="false" />

        <property name="dataSourceProperties">
            <props>
                <prop key="url">jdbc:postgresql://localhost:#{systemProperties['testikannanPortti'] ?: 4320}/valintaperusteet_tests</prop>
                <prop key="user">valintaperusteet_tests</prop>
                <prop key="password">testikannan_salasana</prop>
            </props>
        </property>
    </bean>

    <!-- HikariCP configuration -->
    <bean id="mainDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg ref="hikariConfig" />
    </bean>

</beans>
