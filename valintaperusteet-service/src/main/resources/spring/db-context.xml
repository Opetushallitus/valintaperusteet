<?xml version="1.0" encoding="windows-1252"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config />

    <bean id="genericDAO" class="fi.vm.sade.service.valintaperusteet.dao.impl.GenericDAOImpl" />
    <context:component-scan base-package="fi.vm.sade.service.valintaperusteet.dao.impl" />

    <!-- Add EntityManagerFactory (required by jta) support -->
    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="flyway">
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
        </property>
        <property name="dataSource" ref="dbDataSource"/>
        <property name="jpaPropertyMap">
            <map>
                <entry key="hibernate.show_sql" value="${jpa.showSql}" />
                <entry key="hibernate.hbm2ddl.auto" value="${jpa.schemaUpdate}" />
            </map>
        </property>
    </bean>
    <!-- transaction manager -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf" />
    </bean>
    <!-- enable spring annotation driven transactions -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="flyway" class="com.googlecode.flyway.core.Flyway" init-method="migrate">
        <property name="initOnMigrate" value="true"/>
        <property name="dataSource">
            <bean id="dataSource"
                  class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
                <property name="targetDataSource" ref="dbDataSource"/>
            </bean>
        </property>
    </bean>


    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="poolName" value="springHikariCP" />
        <property name="connectionTestQuery" value="SELECT 1" />
        <property name="dataSourceClassName" value="org.postgresql.ds.PGSimpleDataSource" />
        <property name="maximumPoolSize" value="${postgresql.maxActive}" />
        <property name="minimumIdle" value="2" />
        <property name="idleTimeout" value="30000" />
        <property name="connectionTimeout" value="${postgresql.maxWait}" />
        <property name="maxLifetime" value="60000"/>

        <property name="dataSourceProperties">
            <props>
                <prop key="url">jdbc:postgresql://${postgresql.host}:${postgresql.port}/${postgresql.database}</prop>
                <prop key="user">${postgresql.user}</prop>
                <prop key="password">${postgresql.password}</prop>
            </props>
        </property>
    </bean>

    <!-- HikariCP configuration -->
    <bean id="dbDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg ref="hikariConfig" />
    </bean>

</beans>
